(Нельзя мутировать state напрямую,можно только через setState и вернуть измененную копию старго state)
    state = {
       searchText: ``,
        list: [
            {title:`item1`,id:1},
            {title:`item2`,id:2},
            {title:`item3`,id:3},
        ]
    };
    
      const {list} = this.state;
            lastId = list[list.length - 1].id;(lastId это свойство класса,не переменная).
            
            
1)Delete element:   
     deleteElement = (id) => {
        this.setState(({list}) => {
            const index = list.findIndex(item => item.id === id);
            const newList = [
                ...list.slice(0, index),
                ...list.slice(index + 1)
            ];
            return {
                list: newList
            }
        });
    };
2)Create new element:
    createElement = () => {
        const newElement = title => ({
            title,
            id: lastId++
        });
        this.setState(({list}) => {
            const newState = [
                ...list,
                newElement()
            ];
            return {
                list: newState;
        }
        })
    };
3)Toggle element prop.
ToggleProperty = (arr,id,property) => {
const index = list.findIndex(item => item.id === id);
const prevElement = arr[index];
const nextElement = {...prevElement,[prop]:!prevElement[prop]};
return {
...arr.slice(0,index),
nextElement,
...arr.slice(index)
}}
4)Search element : 
    search = (e) => {
        this.setState({searchText: e.target.value})
    };
       searchElement = (items, text) => {
        if (text.length === 0) {
            return items
        }
        return items.filter(({title}) => {
            return title.toLowerCase().indexOf(text.toLowerCase()) > -1;
        })
    };
     const visibleItems = this.searchElement(list, searchText);(В рендер передаю уже не список list,а visibleItems)

